function [y1] = nnEquZero1_none270717(x1)
%NNEQUZERO1_NONE270717 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 27-Jul-2017 00:16:18.
% 
% [y1] = nnEquZero1_none270717(x1) takes these arguments:
%   x = 4xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2 3];
x1_step2.xoffset = [-1.69590442012002;-2;0];
x1_step2.gain = [0.589655872191919;0.5;2.00501253132832];
x1_step2.ymin = -1;

% Layer 1
b1 = [-6.8067250462120237;7.188521396305557;-1.6321203346615787;-0.58915299143535105;-1.2072873910052637;-0.17289163134128502;0.97464439933065483;2.8643650259645352;-0.048593170355819025;-2.7121238499709031];
IW1_1 = [0.36861593543387877 0.42034129236757412 4.757068579047413;0.43273949578649085 0.54589694049965776 -4.9026769735922739;0.0060555045094100972 -0.019622986154708724 1.5993831663318752;-0.043353680778618404 -0.085164353343943011 0.10536405716525775;-0.04538016693658415 -0.099894109821406091 1.3069701015181094;-0.24376628118918689 -0.40183467459150646 0.62937937441282155;0.099471210900790641 0.17558545249535396 -1.3655666791956687;0.1048741299580933 0.29890942793529934 2.3975823294458709;0.34404923245031949 0.53889929019181804 -1.0552789458849146;0.16293812605785707 0.34433844852696377 -2.1210603878900054];

% Layer 2
b2 = 7.2945892459122703;
LW2_1 = [22.630254398464903 29.580990233900323 21.757280477085395 33.259661041359266 -48.066643668490364 -6.9144484617930493 -22.39378535256893 2.7675710155370998 -2.2855797373798481 3.9288470345446749];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0514097468891074;
y1_step1.xoffset = -19.4515643532935;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = removeconstantrows_apply(x1,x1_step1);
xp1 = mapminmax_apply(xp1,x1_step2);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
  y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
