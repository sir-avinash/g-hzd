function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-May-2016 12:34:30.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 30xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1.01441922118398;2.68030613901596;-0.6];
  x1_step1_gain = [0.979046173908066;2.10940547505335;1.66666666666667];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [0.20769969100061414;0.75410574568716771;-0.98308128315747834;0.062412953106234528;-1.0170042827555505];
  IW1_1 = [-1.0528121817692919 0.98551049746529529 0.92950708764265577;1.1865748003859242 0.22824747252015595 -0.4430622109172821;0.26865340449481828 -1.4657382493921733 0.27488513489433331;-0.9278426138974144 0.34795923594597639 0.11790803059706512;0.26139876749641289 1.3663827644417246 -0.45693060654734469];
  
  % Layer 2
  b2 = [0.0003940187942748682;0.060536327942154106;-0.34569328052027187;-0.41717866124026992;0.45572202969299364;0.12946018817524768;-0.025435156679498812;-0.20377669693652933;-0.46438032130437601;0.51557197829402679;0.13760768807265533;-0.14919165921099464;-0.17030856000377415;-0.13779696515459278;0.097441958383838748;0.14959934140897513;-0.42496885891291314;0.19285091305092592;-0.13508781490178151;0.034036043764616344;0.2245439069127928;-0.55273195831642352;0.34020129112315289;-0.56160984768623223;0.38586954928981454;0.056184833598767962;-0.57560993500416491;0.37393351871459163;-0.52436140469919523;0.37299840285429409];
  LW2_1 = [0.099787661541129058 -0.36426498482111908 -0.064518656289827947 0.50652562444649274 0.15686060910591615;0.35691669528484976 0.11617580478233644 -0.43774809772564444 -0.2934196310791084 0.76827886522930933;0.37013781077344293 0.36288917080037425 -0.68202507647205823 -0.1923426442514623 0.40805083667890596;-0.45759022378455427 -0.19630638815901055 -0.15012509913207739 0.36461063714407721 -0.63689331473141364;-0.37462118910659936 0.15824813905418 0.75126124115896531 0.80942173019638719 -0.059149670745826777;-0.06476331772997998 -0.17666319209682238 -0.081902540746819394 0.42961071684719332 0.21864572224183595;0.27034010534658087 0.085501244799127615 -0.57914918087052292 -0.18686361552124225 0.38763775612017554;0.30937136355450101 0.28255409233123896 -0.28180379745923723 0.0062918102531227598 0.52908775572147448;-0.46517665724539176 -0.27254436131051551 -0.13885113772716606 0.33754221774427212 -0.72414012593353283;-0.36354612803105618 0.17053679448736325 0.85569477881639733 0.8583563576196136 -0.1084003091776331;-0.014153715187062559 -0.30883310320087809 0.26982487654741916 0.17178600464023486 -0.080414085632961305;0.21699426328764576 0.15564741961065087 -0.70738754631437994 0.043699764133314833 0.28069003907836082;0.25117262217519681 0.27050090498582002 -0.21137432003038287 0.23000721281809 0.67887652612558635;-0.12887495879116181 0.096387475280917859 0.184252282033873 0.21825241117387031 -0.25816227878786863;-0.16598752777906095 -0.18090373818404856 0.13434101810873042 0.017503351458875948 -0.13493274013881126;-0.083786428698648024 -0.30576459750052426 0.37948926959673124 0.28319728335300109 -0.32147118638176858;0.21459794414466604 0.57071091922411721 -0.60880161150245671 0.37485427117522202 0.1913243609465419;0.17017476752502589 -0.16368121691530832 -0.36500906229080332 -0.067922538399388568 0.89237341787686464;-0.080248677440575109 0.21712995805000856 -0.29449218694221063 -0.72042914819284998 -0.019908266881948088;-0.072555247315548452 0.086321429967452748 -0.020601785241577533 -0.70839081161816009 0.30413578582516171;-0.50886555473629258 -0.31964263306954765 0.48324223223155532 0.22768166528933678 -0.25905611579829835;0.24011662357512067 0.66850555151641156 -0.40539645936405477 0.72984052750927231 -0.0079949766405417594;0.1549362408481986 -0.43722467799822567 -0.35226725482660903 -0.0044575599303110607 0.75657153053520687;-0.1302552633550294 -0.4232542594969429 -0.89529317733707381 -1.3887972168718004 -0.027887155519412538;0.069726638636189622 0.86990015238973184 0.47220854450087885 -0.18136576484304248 0.36497605873040662;-0.54377644110359169 -0.051877018178490067 -0.17315772728262144 0.25822597099941563 0.39989877161570142;0.22494063886568313 0.73385690606481924 -0.076697265146386459 1.1198069517286433 0.035686591131610219;0.082647604092965371 -0.59378095869074199 -0.50586164268315548 0.135483431602931 0.5112594513519203;-0.20526492112377293 -0.00051694121825395401 -0.63864770683083405 -0.91298110997481696 -0.17232463064284304;-0.092163213614029446 0.48097828650188179 0.32924684433799234 -0.37407539881998364 0.40105320533225886];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = [28.198409236354;2.279984540034;2.27993492161363;2.16821418240099;2.16000834864844;14.2184532877728;2.23838126010868;2.23050032026065;1.89661133706729;1.88030300485507;16.1785639364664;2.40539955235709;2.42167479385508;0.968085966863351;0.967209727636862;6.15520341886226;2.18466987878908;2.18387993100603;1.53185610679585;1.4295749392627;15.1602428826217;2.01790458167386;2.00817226298992;1.84135256479991;1.77757332707573;30.0327957831763;2.18555266714976;2.19226711387786;2.19718013384919;2.19236581926129];
  y1_step1_xoffset = [-0.0355110839853411;2.45393904374452;2.97769539312578;2.43166700467537;2.96359987453235;-0.0756556558702307;2.34445863410871;3.07644697317821;2.39572260039099;2.86787126834609;-0.0580467224860855;2.3564546948266;3.14040283590121;1.51466426996792;2.83086908406687;-0.160174458236884;2.31097984353855;3.0968180310981;1.7748224262178;3.23246060005288;-0.0642153816796247;2.29677564772889;3.0251255988443;2.39935805047259;2.79695515142959;-0.0347722773971729;2.42934819964961;2.97338122147827;2.44328126875389;2.95249004868399];
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
