function [y1] = myNeuralNetworkFunction4(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 25-May-2016 13:55:05.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 4xQ matrix, input #1
% and returns:
%   y = 30xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1.01441922118398;2.68030613901596;-0.6;-0.862335331521766];
  x1_step1_gain = [0.979046173908066;2.10940547505335;1.66666666666667;1.16098723793323];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.026058455672940899;-0.16316342927629457;-0.14052573176984812];
  IW1_1 = [0.58008454956563049 0.70423118118286387 -0.096088708870858311 -0.28592660379570134;0.45109624453806169 -0.048334355882341147 -0.068095884101921023 -0.10954664402609807;-0.70780195606879204 -0.36021887858339291 0.23566071086307755 0.024838347327571546];
  
  % Layer 2
  b2 = [-0.53583332473942669;-0.31739398158679405;-0.29709806798551125;-0.3530928553599556;-0.23035797783521436;-0.74540614474597378;0.013704367966311578;-0.40103612241480951;-0.23984620380057747;-0.025924447456013393;-0.14056646286958779;-0.10317108180973568;-0.67367630328377237;-0.044665766408189748;-0.023526471499720987;0.16571498457598374;-0.26964266508723272;-0.61350203760249222;0.17190277627698736;-0.097264528632662217;-0.045178395717410856;-0.28681185506852214;-0.45347650053233962;-0.18208959318645301;0.28028823352386684;-0.59406546465025978;-0.51560845226971663;-0.24940940476117332;-0.057125322312882518;0.10039219202792406];
  LW2_1 = [0.1507966492016124 -2.146593062274992 0.39356662524564406;1.7834618541718548 -1.8824067685589734 -0.17952123061846498;1.152466284396878 -2.0435808117441283 -0.70397377474861111;-3.3286253150278764 0.019224327834365628 -1.9121544880503023;-3.4117451840166617 0.19276523175552859 -1.9121222501810082;-2.1754984147813792 -2.3769901728137861 -2.1899087947771485;1.7904123969467782 -1.6170334368440196 0.21404665767279729;1.4272501853093376 -1.6230652695254961 -0.045727098205852759;-2.7529223170299546 0.39358290635415266 -1.2025423895338891;-2.6686651945189559 0.52290470342854867 -1.1180228189560644;-0.90635336673506539 0.28111688464539275 0.13257575347266251;1.1692281778550682 -2.2872156221898226 -0.38199185353735693;1.0057166612743667 -2.2279588595097883 -0.49700210664769834;-1.0177989617548686 0.42463575939597653 -0.37418972908261772;-1.0363351900493905 0.48034620498873171 -0.35865215139891532;-0.2700548862416266 0.80420829085797285 0.95275559018657818;0.6205235180812243 -2.5619524109641456 -0.93550808272695796;1.083622956754756 -2.2754298035033123 -0.48573379748206286;-0.51673179481443432 0.98139797124442685 -0.97663527241391146;-0.40532267560068658 1.0932358892015535 -0.80225033848515126;-2.1942442439445848 1.5815004977630089 -0.36448294086658173;0.50946078451746424 -2.5587671074713372 -0.61403117129708795;1.256596659571493 -2.2180597604509273 0.086452644437777851;-0.044426304107046365 1.0626929370714662 -0.72620966969129985;-0.65579319106969947 0.95932268957645483 -1.2014653265621833;-0.6168326523559442 -1.3111298221611616 -1.295961130875696;0.35187143967795848 -2.7081167259172374 -0.43711605153216548;1.1134713437091757 -2.4070802935840909 0.25110425000627573;-0.74253009606567399 0.98845645883422739 -1.1602652194482832;-0.93112877425396057 1.1082771559121374 -1.2514584141256715];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = [28.198409236354;2.279984540034;2.27993492161363;2.16821418240099;2.16000834864844;14.2184532877728;2.23838126010868;2.23050032026065;1.89661133706729;1.88030300485507;16.1785639364664;2.40539955235709;2.42167479385508;0.968085966863351;0.967209727636862;6.15520341886226;2.18466987878908;2.18387993100603;1.53185610679585;1.4295749392627;15.1602428826217;2.01790458167386;2.00817226298992;1.84135256479991;1.77757332707573;30.0327957831763;2.18555266714976;2.19226711387786;2.19718013384919;2.19236581926129];
  y1_step1_xoffset = [-0.0355110839853411;2.45393904374452;2.97769539312578;2.43166700467537;2.96359987453235;-0.0756556558702307;2.34445863410871;3.07644697317821;2.39572260039099;2.86787126834609;-0.0580467224860855;2.3564546948266;3.14040283590121;1.51466426996792;2.83086908406687;-0.160174458236884;2.31097984353855;3.0968180310981;1.7748224262178;3.23246060005288;-0.0642153816796247;2.29677564772889;3.0251255988443;2.39935805047259;2.79695515142959;-0.0347722773971729;2.42934819964961;2.97338122147827;2.44328126875389;2.95249004868399];
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
